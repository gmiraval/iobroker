apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: iobroker
spec:
  serviceName: iobroker
  selector:
    matchLabels:
      app: iobroker
  replicas: 1
  template:
    metadata:
      name: iobroker
      annotations:
        container.apparmor.security.beta.kubernetes.io/iobroker: unconfined
      labels:
        app: iobroker
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      hostname: iobroker
      tolerations:
      #- effect: NoSchedule
      #  key: node-role.kubernetes.io/master
      containers:
      - name: iobroker
        image: angelnu/iobroker:full-latest
        imagePullPolicy: Always
        # command:
        #   - sh
        #   - -c
        #   - while [ 1 ]; do sleep 10;done
        resources:
          requests:
            memory: "800Mi"
            cpu: "50m"
          limits:
            #memory: "128Mi"
            #cpu: "500m"
        ports:
        - containerPort: 8081 #original admin
        - containerPort: 8082 #original vis
        - containerPort: 8084 #original io sockets
        - containerPort: 8087 #original SimpleAPI
        - containerPort: 30000 #hrpc.0
        - containerPort: 30001 #hrpc.1
        - containerPort: 30002 #hrpc.2
        - containerPort: 30003 #hrpc.3
        - containerPort: 30004 #hrpc.4
        - containerPort: 30005 #hrpc.5
        - containerPort: 30081 #Reconfigured admin
        - containerPort: 30082 #Reconfigured vis
        - containerPort: 30087 #Reconfigured SimpleAPI
        livenessProbe:
          tcpSocket:
            port: 30082
          initialDelaySeconds: 600 # 10 minutes
          timeoutSeconds: 5
          failureThreshold: 3 # 2 minutes
        env:
        - name: TZ
          value: Europe/Berlin
        volumeMounts:
        - mountPath: /opt/iobroker/iobroker-data
          name: iobroker-volume
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - DAC_READ_SEARCH
      volumes:
        - name: iobroker-volume
          #hostPath:
          #  path: "/org/iobroker"
          glusterfs:
            endpoints: heketi-storage-endpoints
            path: iobroker
        #- name: logs
        #  emptyDir: {}

---
# -------------------- Service ------------------- #

kind: Service
apiVersion: v1
metadata:
  labels:
    app: iobroker
  name: iobroker
spec:
  ports:
  - name: admin
    port: 30081
    targetPort: 30081
    nodePort: 30081
  - name: vis
    port: 30082
    targetPort: 30082
    nodePort: 30082
  - name: iosocket
    port: 30084
    targetPort: 30084
    nodePort: 30084
  - name: api
    port: 30087
    targetPort: 30087
    nodePort: 30087
  - name: rfdclient0
    port: 30000
    nodePort: 30000
  - name: rfdclient1
    port: 30001
    nodePort: 30001
  - name: rfdclient2
    port: 30002
    nodePort: 30002
  - name: rfdclient3
    port: 30003
    nodePort: 30003
  - name: rfdclient4
    port: 30004
    nodePort: 30004
  - name: rfdclient5
    port: 30005
    nodePort: 30005
  - name: admin-org
    port: 8081
    targetPort: 8081
  - name: vis-org
    port: 8082
    targetPort: 8082
  - name: iosocket-org
    port: 8084
    targetPort: 8084
  type: NodePort
  selector:
    app: iobroker

---

# ------------------- Ingress ------------------- #

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: iobroker
  annotations:
    ingress.kubernetes.io/whitelist-source-range: "192.168.2.0/16,10.0.0.0/8"
spec:
  rules:
  - host: iobroker.angelnu.com
    http:
      paths:
      - path: /
        backend:
          serviceName: iobroker
          servicePort: vis
